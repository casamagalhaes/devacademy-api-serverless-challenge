{
  "name": "devacademy-api-serverless-challenge",
  "version": "1.0.0",
  "description": "Desenvolva uma API REST para 2 entidades: produtos e clientes. Toda a arquitetura deve ser serverless utilizando Api Gateway, Lambda e DynamoDB. Cada entidade deve ter um lambda e tabela cada, garantindo a escalabilidade separada de cada componente do sistema. A API deve permitir operações CRUD básicas de coleção e recursos, através de verbos comuns: GET, POST e PUT. Nas rotas de consulta da coleção, permita que o client envie um parâmetro `filter` pela URL para filtragem de nomes que contenham o valor do parâmetro, por exemplo:",
  "main": "index.js",
  "scripts": {
    "build": "tsc",
    "start": "ts-node-dev --transpile-only --ignore-watch node_modules server.ts",
    "typeorm": "ts-node-dev ./node_modules/typeorm/cli.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/William-Bruno/devacademy-api-serverless-challenge.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/William-Bruno/devacademy-api-serverless-challenge/issues"
  },
  "homepage": "https://github.com/William-Bruno/devacademy-api-serverless-challenge#readme",
  "dependencies": {
    "@types/express": "^4.17.11",
    "express": "^4.17.1",
    "express-async-errors": "^3.1.1",
    "pg": "^8.5.1",
    "typeorm": "^0.2.31"
  },
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^4.16.1",
    "@typescript-eslint/parser": "^4.16.1",
    "eslint": "^7.21.0",
    "eslint-config-airbnb-base": "^14.2.1",
    "eslint-config-prettier": "^8.1.0",
    "eslint-import-resolver-typescript": "^2.4.0",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-prettier": "^3.3.1",
    "prettier": "^2.2.1",
    "reflect-metadata": "^0.1.13",
    "ts-node-dev": "^1.1.6",
    "typescript": "^4.2.2",
    "uuidv4": "^6.2.6"
  }
}
